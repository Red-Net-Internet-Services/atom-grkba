propel:
  _attributes:
    package: lib.model
    defaultIdMethod: native
  access_log:
    _attributes: { phpName: accessLog }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    object_id: { phpName: objectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    access_date: { phpName: accessDate, type: TIMESTAMP, required: false }
    _indexes: [[access_date, object_id], [object_id]]
  accession:
    _attributes: { phpName: accession }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    acquisition_type_id: { phpName: acquisitionTypeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    date: { phpName: date, type: DATE, required: false }
    identifier: { phpName: identifier, type: VARCHAR, size: '255', required: false }
    processing_priority_id: { phpName: processingPriorityId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    processing_status_id: { phpName: processingStatusId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    resource_type_id: { phpName: resourceTypeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: true }
    updated_at: { phpName: updatedAt, type: TIMESTAMP, required: true }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { accession_FI_2: [acquisition_type_id], accession_FI_3: [processing_priority_id], accession_FI_4: [processing_status_id], accession_FI_5: [resource_type_id] }
    _uniques: { accession_U_1: [identifier] }
  accession_event:
    _attributes: { phpName: accessionEvent }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    type_id: { phpName: typeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    accession_id: { phpName: accessionId, type: INTEGER, required: false, foreignTable: accession, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    date: { phpName: date, type: DATE, required: false }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { accession_event_FI_2: [type_id], accession_event_FI_3: [accession_id] }
  accession_event_i18n:
    _attributes: { phpName: accessionEventI18n }
    agent: { phpName: agent, type: VARCHAR, size: '255', required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: accession_event, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  accession_i18n:
    _attributes: { phpName: accessionI18n }
    appraisal: { phpName: appraisal, type: LONGVARCHAR, required: false }
    archival_history: { phpName: archivalHistory, type: LONGVARCHAR, required: false }
    location_information: { phpName: locationInformation, type: LONGVARCHAR, required: false }
    physical_characteristics: { phpName: physicalCharacteristics, type: LONGVARCHAR, required: false }
    processing_notes: { phpName: processingNotes, type: LONGVARCHAR, required: false }
    received_extent_units: { phpName: receivedExtentUnits, type: LONGVARCHAR, required: false }
    scope_and_content: { phpName: scopeAndContent, type: LONGVARCHAR, required: false }
    source_of_acquisition: { phpName: sourceOfAcquisition, type: LONGVARCHAR, required: false }
    title: { phpName: title, type: VARCHAR, size: '255', required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: accession, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  acl_group:
    _attributes: { phpName: aclGroup }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    parent_id: { phpName: parentId, type: INTEGER, required: false, foreignTable: acl_group, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: true }
    updated_at: { phpName: updatedAt, type: TIMESTAMP, required: true }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { acl_group_FI_1: [parent_id] }
  acl_group_i18n:
    _attributes: { phpName: aclGroupI18n }
    name: { phpName: name, type: VARCHAR, size: '255', required: false }
    description: { phpName: description, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: acl_group, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  acl_permission:
    _attributes: { phpName: aclPermission }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    user_id: { phpName: userId, type: INTEGER, required: false, foreignTable: user, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    group_id: { phpName: groupId, type: INTEGER, required: false, foreignTable: acl_group, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    object_id: { phpName: objectId, type: INTEGER, required: false, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    action: { phpName: action, type: VARCHAR, size: '255', required: false }
    grant_deny: { phpName: grantDeny, type: INTEGER, required: true, defaultValue: '0' }
    conditional: { phpName: conditional, type: LONGVARCHAR, required: false }
    constants: { phpName: constants, type: LONGVARCHAR, required: false }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: true }
    updated_at: { phpName: updatedAt, type: TIMESTAMP, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { acl_permission_FI_1: [user_id], acl_permission_FI_2: [group_id], acl_permission_FI_3: [object_id] }
  acl_user_group:
    _attributes: { phpName: aclUserGroup }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    user_id: { phpName: userId, type: INTEGER, required: true, foreignTable: user, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    group_id: { phpName: groupId, type: INTEGER, required: true, foreignTable: acl_group, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { acl_user_group_FI_1: [user_id], acl_user_group_FI_2: [group_id] }
  actor:
    _attributes: { phpName: actor }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    corporate_body_identifiers: { phpName: corporateBodyIdentifiers, type: VARCHAR, size: '1024', required: false }
    entity_type_id: { phpName: entityTypeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    description_status_id: { phpName: descriptionStatusId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    description_detail_id: { phpName: descriptionDetailId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    description_identifier: { phpName: descriptionIdentifier, type: VARCHAR, size: '1024', required: false }
    source_standard: { phpName: sourceStandard, type: VARCHAR, size: '1024', required: false }
    parent_id: { phpName: parentId, type: INTEGER, required: false, foreignTable: actor, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { actor_FI_2: [entity_type_id], actor_FI_3: [description_status_id], actor_FI_4: [description_detail_id], actor_FI_5: [parent_id] }
  actor_i18n:
    _attributes: { phpName: actorI18n }
    authorized_form_of_name: { phpName: authorizedFormOfName, type: VARCHAR, size: '1024', required: false }
    dates_of_existence: { phpName: datesOfExistence, type: VARCHAR, size: '1024', required: false }
    history: { phpName: history, type: LONGVARCHAR, required: false }
    places: { phpName: places, type: LONGVARCHAR, required: false }
    legal_status: { phpName: legalStatus, type: LONGVARCHAR, required: false }
    functions: { phpName: functions, type: LONGVARCHAR, required: false }
    mandates: { phpName: mandates, type: LONGVARCHAR, required: false }
    internal_structures: { phpName: internalStructures, type: LONGVARCHAR, required: false }
    general_context: { phpName: generalContext, type: LONGVARCHAR, required: false }
    institution_responsible_identifier: { phpName: institutionResponsibleIdentifier, type: VARCHAR, size: '1024', required: false }
    rules: { phpName: rules, type: LONGVARCHAR, required: false }
    sources: { phpName: sources, type: LONGVARCHAR, required: false }
    revision_history: { phpName: revisionHistory, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: actor, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  aip:
    _attributes: { phpName: aip }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    type_id: { phpName: typeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    uuid: { phpName: uuid, type: VARCHAR, size: '36', required: false }
    filename: { phpName: filename, type: VARCHAR, size: '1024', required: false }
    size_on_disk: { phpName: sizeOnDisk, type: BIGINT, required: false }
    digital_object_count: { phpName: digitalObjectCount, type: INTEGER, required: false }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: false }
    part_of: { phpName: partOf, type: INTEGER, required: false, foreignTable: object, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    _indexes: { aip_FI_2: [type_id], aip_FI_3: [part_of] }
  audit_log:
    _attributes: { phpName: auditLog }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    object_id: { phpName: objectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    user_id: { phpName: userId, type: INTEGER, required: false, foreignTable: user, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    user_name: { phpName: userName, type: VARCHAR, size: '255', required: false }
    action_type_id: { phpName: actionTypeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: false }
    _indexes: { audit_log_FI_1: [object_id], audit_log_FI_2: [user_id], audit_log_FI_3: [action_type_id] }
  clipboard_save:
    _attributes: { phpName: clipboardSave }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    user_id: { phpName: userId, type: INTEGER, required: false, foreignTable: user, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    password: { phpName: password, type: VARCHAR, size: '255', required: false }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: false }
    _indexes: { clipboard_save_FI_1: [user_id] }
  clipboard_save_item:
    _attributes: { phpName: clipboardSaveItem }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    save_id: { phpName: saveId, type: INTEGER, required: false, foreignTable: clipboard_save, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    item_class_name: { phpName: itemClassName, type: VARCHAR, size: '255', required: false }
    slug: { phpName: slug, type: VARCHAR, size: '255', required: false }
    _indexes: { clipboard_save_item_FI_1: [save_id] }
  contact_information:
    _attributes: { phpName: contactInformation }
    actor_id: { phpName: actorId, type: INTEGER, required: true, foreignTable: actor, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    primary_contact: { phpName: primaryContact, type: TINYINT, required: false }
    contact_person: { phpName: contactPerson, type: VARCHAR, size: '1024', required: false }
    street_address: { phpName: streetAddress, type: LONGVARCHAR, required: false }
    website: { phpName: website, type: VARCHAR, size: '1024', required: false }
    email: { phpName: email, type: VARCHAR, size: '255', required: false }
    telephone: { phpName: telephone, type: VARCHAR, size: '255', required: false }
    fax: { phpName: fax, type: VARCHAR, size: '255', required: false }
    postal_code: { phpName: postalCode, type: VARCHAR, size: '255', required: false }
    country_code: { phpName: countryCode, type: VARCHAR, size: '255', required: false }
    longitude: { phpName: longitude, type: FLOAT, required: false }
    latitude: { phpName: latitude, type: FLOAT, required: false }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: true }
    updated_at: { phpName: updatedAt, type: TIMESTAMP, required: true }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { contact_information_FI_1: [actor_id] }
  contact_information_i18n:
    _attributes: { phpName: contactInformationI18n }
    contact_type: { phpName: contactType, type: VARCHAR, size: '1024', required: false }
    city: { phpName: city, type: VARCHAR, size: '1024', required: false }
    region: { phpName: region, type: VARCHAR, size: '1024', required: false }
    note: { phpName: note, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: contact_information, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  deaccession:
    _attributes: { phpName: deaccession }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    accession_id: { phpName: accessionId, type: INTEGER, required: false, foreignTable: accession, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    date: { phpName: date, type: DATE, required: false }
    identifier: { phpName: identifier, type: VARCHAR, size: '255', required: false }
    scope_id: { phpName: scopeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: true }
    updated_at: { phpName: updatedAt, type: TIMESTAMP, required: true }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { deaccession_FI_2: [accession_id], deaccession_FI_3: [scope_id] }
  deaccession_i18n:
    _attributes: { phpName: deaccessionI18n }
    description: { phpName: description, type: LONGVARCHAR, required: false }
    extent: { phpName: extent, type: LONGVARCHAR, required: false }
    reason: { phpName: reason, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: deaccession, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  digital_object:
    _attributes: { phpName: digitalObject }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    object_id: { phpName: objectId, type: INTEGER, required: false, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    usage_id: { phpName: usageId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    language: { phpName: language, type: VARCHAR, size: '50', required: false }
    mime_type: { phpName: mimeType, type: VARCHAR, size: '255', required: false }
    media_type_id: { phpName: mediaTypeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    name: { phpName: name, type: VARCHAR, size: '1024', required: true }
    path: { phpName: path, type: VARCHAR, size: '1024', required: true }
    sequence: { phpName: sequence, type: INTEGER, required: false }
    byte_size: { phpName: byteSize, type: BIGINT, required: false }
    checksum: { phpName: checksum, type: VARCHAR, size: '255', required: false }
    checksum_type: { phpName: checksumType, type: VARCHAR, size: '50', required: false }
    parent_id: { phpName: parentId, type: INTEGER, required: false, foreignTable: digital_object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    _indexes: { path: [path], digital_object_FI_2: [object_id], digital_object_FI_3: [usage_id], digital_object_FI_4: [media_type_id], digital_object_FI_5: [parent_id] }
  donor:
    _attributes: { phpName: donor }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: actor, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
  event:
    _attributes: { phpName: event }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    start_date: { phpName: startDate, type: DATE, required: false }
    start_time: { phpName: startTime, type: TIME, required: false }
    end_date: { phpName: endDate, type: DATE, required: false }
    end_time: { phpName: endTime, type: TIME, required: false }
    type_id: { phpName: typeId, type: INTEGER, required: true, foreignTable: term, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    object_id: { phpName: objectId, type: INTEGER, required: false, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    actor_id: { phpName: actorId, type: INTEGER, required: false, foreignTable: actor, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { event_FI_2: [type_id], event_FI_3: [object_id], event_FI_4: [actor_id] }
  event_i18n:
    _attributes: { phpName: eventI18n }
    name: { phpName: name, type: VARCHAR, size: '1024', required: false }
    description: { phpName: description, type: LONGVARCHAR, required: false }
    date: { phpName: date, type: VARCHAR, size: '1024', required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: event, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  function_object:
    _attributes: { phpName: functionObject }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    type_id: { phpName: typeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    description_status_id: { phpName: descriptionStatusId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    description_detail_id: { phpName: descriptionDetailId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    description_identifier: { phpName: descriptionIdentifier, type: VARCHAR, size: '1024', required: false }
    source_standard: { phpName: sourceStandard, type: VARCHAR, size: '1024', required: false }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { function_object_FI_2: [type_id], function_object_FI_3: [description_status_id], function_object_FI_4: [description_detail_id] }
  function_object_i18n:
    _attributes: { phpName: functionObjectI18n }
    authorized_form_of_name: { phpName: authorizedFormOfName, type: VARCHAR, size: '1024', required: false }
    classification: { phpName: classification, type: VARCHAR, size: '1024', required: false }
    dates: { phpName: dates, type: VARCHAR, size: '1024', required: false }
    description: { phpName: description, type: LONGVARCHAR, required: false }
    history: { phpName: history, type: LONGVARCHAR, required: false }
    legislation: { phpName: legislation, type: LONGVARCHAR, required: false }
    institution_identifier: { phpName: institutionIdentifier, type: LONGVARCHAR, required: false }
    revision_history: { phpName: revisionHistory, type: LONGVARCHAR, required: false }
    rules: { phpName: rules, type: LONGVARCHAR, required: false }
    sources: { phpName: sources, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: function_object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  granted_right:
    _attributes: { phpName: grantedRight }
    rights_id: { phpName: rightsId, type: INTEGER, required: true, foreignTable: rights, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    act_id: { phpName: actId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    restriction: { phpName: restriction, type: TINYINT, required: false, defaultValue: '1' }
    start_date: { phpName: startDate, type: DATE, required: false }
    end_date: { phpName: endDate, type: DATE, required: false }
    notes: { phpName: notes, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { granted_right_FI_1: [rights_id], granted_right_FI_2: [act_id] }
  information_object:
    _attributes: { phpName: informationObject }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    identifier: { phpName: identifier, type: VARCHAR, size: '1024', required: false }
    oai_local_identifier: { phpName: oaiLocalIdentifier, type: INTEGER, autoIncrement: true, required: true }
    level_of_description_id: { phpName: levelOfDescriptionId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    collection_type_id: { phpName: collectionTypeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    repository_id: { phpName: repositoryId, type: INTEGER, required: false, foreignTable: repository, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    parent_id: { phpName: parentId, type: INTEGER, required: false, foreignTable: information_object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    description_status_id: { phpName: descriptionStatusId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    description_detail_id: { phpName: descriptionDetailId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    description_identifier: { phpName: descriptionIdentifier, type: VARCHAR, size: '1024', required: false }
    source_standard: { phpName: sourceStandard, type: VARCHAR, size: '1024', required: false }
    display_standard_id: { phpName: displayStandardId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    lft: { phpName: lft, type: INTEGER, required: false }
    rgt: { phpName: rgt, type: INTEGER, required: false }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { lft: [lft], rgt: [rgt], information_object_FI_2: [level_of_description_id], information_object_FI_3: [collection_type_id], information_object_FI_4: [repository_id], information_object_FI_5: [parent_id], information_object_FI_6: [description_status_id], information_object_FI_7: [description_detail_id], information_object_FI_8: [display_standard_id] }
    _uniques: { information_object_U_1: [oai_local_identifier] }
  information_object_i18n:
    _attributes: { phpName: informationObjectI18n }
    title: { phpName: title, type: VARCHAR, size: '1024', required: false }
    alternate_title: { phpName: alternateTitle, type: VARCHAR, size: '1024', required: false }
    edition: { phpName: edition, type: VARCHAR, size: '1024', required: false }
    extent_and_medium: { phpName: extentAndMedium, type: LONGVARCHAR, required: false }
    archival_history: { phpName: archivalHistory, type: LONGVARCHAR, required: false }
    acquisition: { phpName: acquisition, type: LONGVARCHAR, required: false }
    scope_and_content: { phpName: scopeAndContent, type: LONGVARCHAR, required: false }
    appraisal: { phpName: appraisal, type: LONGVARCHAR, required: false }
    accruals: { phpName: accruals, type: LONGVARCHAR, required: false }
    arrangement: { phpName: arrangement, type: LONGVARCHAR, required: false }
    access_conditions: { phpName: accessConditions, type: LONGVARCHAR, required: false }
    reproduction_conditions: { phpName: reproductionConditions, type: LONGVARCHAR, required: false }
    physical_characteristics: { phpName: physicalCharacteristics, type: LONGVARCHAR, required: false }
    finding_aids: { phpName: findingAids, type: LONGVARCHAR, required: false }
    location_of_originals: { phpName: locationOfOriginals, type: LONGVARCHAR, required: false }
    location_of_copies: { phpName: locationOfCopies, type: LONGVARCHAR, required: false }
    related_units_of_description: { phpName: relatedUnitsOfDescription, type: LONGVARCHAR, required: false }
    institution_responsible_identifier: { phpName: institutionResponsibleIdentifier, type: VARCHAR, size: '1024', required: false }
    rules: { phpName: rules, type: LONGVARCHAR, required: false }
    sources: { phpName: sources, type: LONGVARCHAR, required: false }
    revision_history: { phpName: revisionHistory, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: information_object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  job:
    _attributes: { phpName: job }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    name: { phpName: name, type: VARCHAR, size: '255', required: false }
    download_path: { phpName: downloadPath, type: LONGVARCHAR, required: false }
    completed_at: { phpName: completedAt, type: TIMESTAMP, required: false }
    user_id: { phpName: userId, type: INTEGER, required: false, foreignTable: user, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    object_id: { phpName: objectId, type: INTEGER, required: false, foreignTable: object, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    status_id: { phpName: statusId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    output: { phpName: output, type: LONGVARCHAR, required: false }
    _indexes: { job_FI_2: [user_id], job_FI_3: [object_id], job_FI_4: [status_id] }
  keymap:
    _attributes: { phpName: keymap }
    source_id: { phpName: sourceId, type: LONGVARCHAR, required: false }
    target_id: { phpName: targetId, type: INTEGER, required: false }
    source_name: { phpName: sourceName, type: LONGVARCHAR, required: false }
    target_name: { phpName: targetName, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
  menu:
    _attributes: { phpName: menu }
    parent_id: { phpName: parentId, type: INTEGER, required: false, foreignTable: menu, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    name: { phpName: name, type: VARCHAR, size: '255', required: false }
    path: { phpName: path, type: VARCHAR, size: '255', required: false }
    lft: { phpName: lft, type: INTEGER, required: false }
    rgt: { phpName: rgt, type: INTEGER, required: false }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: true }
    updated_at: { phpName: updatedAt, type: TIMESTAMP, required: true }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { menu_FI_1: [parent_id] }
  menu_i18n:
    _attributes: { phpName: menuI18n }
    label: { phpName: label, type: VARCHAR, size: '255', required: false }
    description: { phpName: description, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: menu, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  note:
    _attributes: { phpName: note }
    object_id: { phpName: objectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    type_id: { phpName: typeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    scope: { phpName: scope, type: VARCHAR, size: '1024', required: false }
    user_id: { phpName: userId, type: INTEGER, required: false, foreignTable: user, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { note_FI_1: [object_id], note_FI_2: [type_id], note_FI_3: [user_id] }
  note_i18n:
    _attributes: { phpName: noteI18n }
    content: { phpName: content, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: note, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  oai_harvest:
    _attributes: { phpName: oaiHarvest }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    oai_repository_id: { phpName: oaiRepositoryId, type: INTEGER, required: true, foreignTable: oai_repository, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    start_timestamp: { phpName: startTimestamp, type: TIMESTAMP, required: false }
    end_timestamp: { phpName: endTimestamp, type: TIMESTAMP, required: false }
    last_harvest: { phpName: lastHarvest, type: TIMESTAMP, required: false }
    last_harvest_attempt: { phpName: lastHarvestAttempt, type: TIMESTAMP, required: false }
    metadataPrefix: { phpName: metadataPrefix, type: VARCHAR, size: '255', required: false }
    set: { phpName: set, type: VARCHAR, size: '1024', required: false }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { oai_harvest_FI_1: [oai_repository_id] }
  oai_repository:
    _attributes: { phpName: oaiRepository }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    name: { phpName: name, type: VARCHAR, size: '1024', required: false }
    uri: { phpName: uri, type: VARCHAR, size: '1024', required: false }
    admin_email: { phpName: adminEmail, type: VARCHAR, size: '255', required: false }
    earliest_timestamp: { phpName: earliestTimestamp, type: TIMESTAMP, required: false }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: true }
    updated_at: { phpName: updatedAt, type: TIMESTAMP, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
  object:
    _attributes: { phpName: object }
    class_name: { phpName: className, type: VARCHAR, size: '255', required: false }
    created_at: { phpName: createdAt, type: TIMESTAMP, required: true }
    updated_at: { phpName: updatedAt, type: TIMESTAMP, required: true }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
  object_term_relation:
    _attributes: { phpName: objectTermRelation }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    object_id: { phpName: objectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    term_id: { phpName: termId, type: INTEGER, required: true, foreignTable: term, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    start_date: { phpName: startDate, type: DATE, required: false }
    end_date: { phpName: endDate, type: DATE, required: false }
    _indexes: { object_term_relation_FI_2: [object_id], object_term_relation_FI_3: [term_id] }
  other_name:
    _attributes: { phpName: otherName }
    object_id: { phpName: objectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    type_id: { phpName: typeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    start_date: { phpName: startDate, type: DATE, required: false }
    end_date: { phpName: endDate, type: DATE, required: false }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { other_name_FI_1: [object_id], other_name_FI_2: [type_id] }
  other_name_i18n:
    _attributes: { phpName: otherNameI18n }
    name: { phpName: name, type: VARCHAR, size: '1024', required: false }
    note: { phpName: note, type: VARCHAR, size: '1024', required: false }
    dates: { phpName: dates, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: other_name, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  physical_object:
    _attributes: { phpName: physicalObject }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    type_id: { phpName: typeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { physical_object_FI_2: [type_id] }
  physical_object_i18n:
    _attributes: { phpName: physicalObjectI18n }
    name: { phpName: name, type: VARCHAR, size: '1024', required: false }
    description: { phpName: description, type: LONGVARCHAR, required: false }
    location: { phpName: location, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: physical_object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  premis_object:
    _attributes: { phpName: premisObject }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    information_object_id: { phpName: informationObjectId, type: INTEGER, required: false, foreignTable: information_object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    puid: { phpName: puid, type: VARCHAR, size: '255', required: false }
    filename: { phpName: filename, type: VARCHAR, size: '1024', required: false }
    last_modified: { phpName: lastModified, type: TIMESTAMP, required: false }
    date_ingested: { phpName: dateIngested, type: DATE, required: false }
    size: { phpName: size, type: BIGINT, required: false }
    mime_type: { phpName: mimeType, type: VARCHAR, size: '255', required: false }
    _indexes: { premis_object_FI_2: [information_object_id] }
  property:
    _attributes: { phpName: property }
    object_id: { phpName: objectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    scope: { phpName: scope, type: VARCHAR, size: '1024', required: false }
    name: { phpName: name, type: VARCHAR, size: '1024', required: false }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { property_FI_1: [object_id] }
  property_i18n:
    _attributes: { phpName: propertyI18n }
    value: { phpName: value, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: property, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  relation:
    _attributes: { phpName: relation }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    subject_id: { phpName: subjectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    object_id: { phpName: objectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    type_id: { phpName: typeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    start_date: { phpName: startDate, type: DATE, required: false }
    end_date: { phpName: endDate, type: DATE, required: false }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { relation_FI_2: [subject_id], relation_FI_3: [object_id], relation_FI_4: [type_id] }
  relation_i18n:
    _attributes: { phpName: relationI18n }
    description: { phpName: description, type: LONGVARCHAR, required: false }
    date: { phpName: date, type: VARCHAR, size: '1024', required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: relation, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  repository:
    _attributes: { phpName: repository }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: actor, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    identifier: { phpName: identifier, type: VARCHAR, size: '1024', required: false }
    desc_status_id: { phpName: descStatusId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    desc_detail_id: { phpName: descDetailId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    desc_identifier: { phpName: descIdentifier, type: VARCHAR, size: '1024', required: false }
    upload_limit: { phpName: uploadLimit, type: FLOAT, required: false }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { repository_FI_2: [desc_status_id], repository_FI_3: [desc_detail_id] }
  repository_i18n:
    _attributes: { phpName: repositoryI18n }
    geocultural_context: { phpName: geoculturalContext, type: LONGVARCHAR, required: false }
    collecting_policies: { phpName: collectingPolicies, type: LONGVARCHAR, required: false }
    buildings: { phpName: buildings, type: LONGVARCHAR, required: false }
    holdings: { phpName: holdings, type: LONGVARCHAR, required: false }
    finding_aids: { phpName: findingAids, type: LONGVARCHAR, required: false }
    opening_times: { phpName: openingTimes, type: LONGVARCHAR, required: false }
    access_conditions: { phpName: accessConditions, type: LONGVARCHAR, required: false }
    disabled_access: { phpName: disabledAccess, type: LONGVARCHAR, required: false }
    research_services: { phpName: researchServices, type: LONGVARCHAR, required: false }
    reproduction_services: { phpName: reproductionServices, type: LONGVARCHAR, required: false }
    public_facilities: { phpName: publicFacilities, type: LONGVARCHAR, required: false }
    desc_institution_identifier: { phpName: descInstitutionIdentifier, type: VARCHAR, size: '1024', required: false }
    desc_rules: { phpName: descRules, type: LONGVARCHAR, required: false }
    desc_sources: { phpName: descSources, type: LONGVARCHAR, required: false }
    desc_revision_history: { phpName: descRevisionHistory, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: repository, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  rights:
    _attributes: { phpName: rights }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    start_date: { phpName: startDate, type: DATE, required: false }
    end_date: { phpName: endDate, type: DATE, required: false }
    basis_id: { phpName: basisId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    rights_holder_id: { phpName: rightsHolderId, type: INTEGER, required: false, foreignTable: actor, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    copyright_status_id: { phpName: copyrightStatusId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    copyright_status_date: { phpName: copyrightStatusDate, type: DATE, required: false }
    copyright_jurisdiction: { phpName: copyrightJurisdiction, type: VARCHAR, size: '1024', required: false }
    statute_determination_date: { phpName: statuteDeterminationDate, type: DATE, required: false }
    statute_citation_id: { phpName: statuteCitationId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: 'SET NULL', onUpdate: RESTRICT }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { rights_FI_2: [basis_id], rights_FI_3: [rights_holder_id], rights_FI_4: [copyright_status_id], rights_FI_5: [statute_citation_id] }
  rights_holder:
    _attributes: { phpName: rightsHolder }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: actor, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
  rights_i18n:
    _attributes: { phpName: rightsI18n }
    rights_note: { phpName: rightsNote, type: LONGVARCHAR, required: false }
    copyright_note: { phpName: copyrightNote, type: LONGVARCHAR, required: false }
    identifier_value: { phpName: identifierValue, type: LONGVARCHAR, required: false }
    identifier_type: { phpName: identifierType, type: LONGVARCHAR, required: false }
    identifier_role: { phpName: identifierRole, type: LONGVARCHAR, required: false }
    license_terms: { phpName: licenseTerms, type: LONGVARCHAR, required: false }
    license_note: { phpName: licenseNote, type: LONGVARCHAR, required: false }
    statute_jurisdiction: { phpName: statuteJurisdiction, type: LONGVARCHAR, required: false }
    statute_note: { phpName: statuteNote, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: rights, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  setting:
    _attributes: { phpName: setting }
    name: { phpName: name, type: VARCHAR, size: '255', required: false }
    scope: { phpName: scope, type: VARCHAR, size: '255', required: false }
    editable: { phpName: editable, type: TINYINT, required: false, defaultValue: '0' }
    deleteable: { phpName: deleteable, type: TINYINT, required: false, defaultValue: '0' }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
  setting_i18n:
    _attributes: { phpName: settingI18n }
    value: { phpName: value, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: setting, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  slug:
    _attributes: { phpName: slug }
    object_id: { phpName: objectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    slug: { phpName: slug, type: VARCHAR, size: '255', required: true }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _uniques: { slug_U_1: [object_id], slug_U_2: [slug] }
  static_page:
    _attributes: { phpName: staticPage }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
  static_page_i18n:
    _attributes: { phpName: staticPageI18n }
    title: { phpName: title, type: VARCHAR, size: '1024', required: false }
    content: { phpName: content, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: static_page, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  status:
    _attributes: { phpName: status }
    object_id: { phpName: objectId, type: INTEGER, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    type_id: { phpName: typeId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    status_id: { phpName: statusId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    id: { phpName: id, type: INTEGER, primaryKey: true, autoIncrement: true, required: true }
    serial_number: { phpName: serialNumber, type: INTEGER, required: true, defaultValue: '0' }
    _indexes: { status_FI_1: [object_id], status_FI_2: [type_id], status_FI_3: [status_id] }
  taxonomy:
    _attributes: { phpName: taxonomy }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    usage: { phpName: usage, type: VARCHAR, size: '1024', required: false }
    parent_id: { phpName: parentId, type: INTEGER, required: false, foreignTable: taxonomy, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { taxonomy_FI_2: [parent_id] }
  taxonomy_i18n:
    _attributes: { phpName: taxonomyI18n }
    name: { phpName: name, type: VARCHAR, size: '1024', required: false }
    note: { phpName: note, type: LONGVARCHAR, required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: taxonomy, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  term:
    _attributes: { phpName: term }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: object, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    taxonomy_id: { phpName: taxonomyId, type: INTEGER, required: true, foreignTable: taxonomy, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    code: { phpName: code, type: VARCHAR, size: '1024', required: false }
    parent_id: { phpName: parentId, type: INTEGER, required: false, foreignTable: term, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    lft: { phpName: lft, type: INTEGER, required: false }
    rgt: { phpName: rgt, type: INTEGER, required: false }
    source_culture: { phpName: sourceCulture, type: VARCHAR, size: '16', required: true }
    _indexes: { lft: [lft], term_FI_2: [taxonomy_id], term_FI_3: [parent_id] }
  term_i18n:
    _attributes: { phpName: termI18n }
    name: { phpName: name, type: VARCHAR, size: '1024', required: false }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: term, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    culture: { phpName: culture, type: VARCHAR, size: '16', primaryKey: true, required: true }
  user:
    _attributes: { phpName: user }
    id: { phpName: id, type: INTEGER, primaryKey: true, required: true, foreignTable: actor, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    username: { phpName: username, type: VARCHAR, size: '255', required: false }
    email: { phpName: email, type: VARCHAR, size: '255', required: false }
    password_hash: { phpName: passwordHash, type: VARCHAR, size: '255', required: false }
    salt: { phpName: salt, type: VARCHAR, size: '255', required: false }
    active: { phpName: active, type: TINYINT, required: false, defaultValue: '1' }
